### Service
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  labels:
    app: sonarqube
spec:
  ports:
  - name: sonarqube
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: sonarqube
    deploymentconfig: sonarqube
  sessionAffinity: None
  type: ClusterIP
---
### Route
apiVersion: v1
kind: Route
metadata:
  annotations:
    description: Route for SonarQube's http service.
  name: sonarqube
  labels:
    app: sonarqube
spec:
  to:
    kind: Service
    name: sonarqube
---
### Deployment
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: sonarqube
    deploymentconfig: sonarqube
  name: sonarqube
spec:
  replicas: 1
  selector:
    app: sonarqube
    deploymentconfig: sonarqube
  strategy:
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sonarqube
        deploymentconfig: sonarqube
    spec:
      containers:
      - env:
        - name: SONARQUBE_JDBC_PASSWORD
          value: ${POSTGRESQL_PASSWORD}
        - name: SONARQUBE_JDBC_URL
          value: jdbc:postgresql://postgresql-sonarqube/sonar
        - name: SONARQUBE_JDBC_USERNAME
          value: sonar
        image: 'sonarqube:lts-alpine'
        imagePullPolicy: IfNotPresent
        name: sonarqube
        ports:
        - containerPort: 9000
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          httpGet:
            port: 9000
            path: /
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          httpGet:
            port: 9000
            path: /
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 200m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqube-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: sonarqube-data
        persistentVolumeClaim:
          claimName: sonarqube-data
---
### Presitent volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarqube
  labels:
    type: local
    pattern: sonarqube
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Gi
  nfs:
    path: /var/exports/sonarqube
    server: mpt-nfs01.mpt.mp.br 
  persistentVolumeReclaimPolicy: Recycle
---
### Presitent volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
